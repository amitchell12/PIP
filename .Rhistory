geom_point(data = sum_tonic_bias, aes(block, EWB),
position = position_nudge(-.05), colour = 'grey5', size = 2.5) +
geom_errorbar(data = sum_tonic_bias,
aes(block, y = EWB, ymin = EWB-ci, ymax = EWB+ci),
position = position_nudge(-.05), size = 0.8,
width = .03, colour = 'grey5') +
# connect the two lines
geom_line(data = sum_tonic_bias,
aes(x = block, y = EWB),
size = 0.75, position = position_nudge(-.05), colour = 'grey5') +
scale_colour_manual(values = c('grey50', 'grey20')) +
scale_fill_manual(values = c('grey90', 'grey60')) +
scale_x_discrete(breaks = c(1,2), labels = c('Early', 'Late')) +
labs(x = '', y = 'EWB') +
ylim(-.15,.10) +
theme_classic() +
theme(legend.position = 'none',
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) -> tonic_bias_plot
# is this difference at all significant??
# cast tonic
tonic_bias <- dcast(tonic, ID ~ block, value.var = "EWB")
# rename columns
names(tonic_bias)[2] <- 'EARLY'
names(tonic_bias)[3] <- 'LATE'
# difference between early and late
tonic_bias$DIFF <- tonic_bias$LATE - tonic_bias$EARLY
block_bias_test <- t.test(tonic_bias$DIFF, mu = 0, alternative = 'two.sided')
block_bias_test
tonic_bias_diff <- summarySE(data = tonic_bias, measurevar = 'DIFF', na.rm = TRUE)
# get effect size
tonic_bias_diff <- tonic_bias_diff %>% mutate(es = DIFF/sd)
tonic_bias_diff
# now plot difference and put together!
ggplot(tonic_bias_diff) +
geom_hline(aes(yintercept = 0), colour = 'gray50',
linetype = 'dashed', size = 1) +
geom_point(aes(0, DIFF), size = 3.3, colour = 'grey5') +
geom_linerange(aes(0, ymin = DIFF-ci, ymax = DIFF+ci),
colour = 'grey5', size = .8) +
#xlim(-.025,.025) +
ylim(-.03,.03) +
labs(x = '', y = 'Difference (late - early)') +
scale_x_continuous(breaks = 0, labels = '') +
theme_classic() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12))-> tonicB_diff_plot
tonic_bias_all <- ggarrange(tonic_bias_plot, tonicB_diff_plot,
ncol = 2, nrow = 1,
widths = c(1, 0.5))
#phasic_all <- annotate_figure(phasic_all,
#                             top = text_grob("SUM: Tone", size = 14))
tonic_bias_all
# across tone
# first, average silent and toned trials by block
phasic_bias_wide <- dcast(EW_DV, ID ~ block*tone, value.var = 'EWB')
phasic_bias_wide$BLANK <- rowMeans(phasic_bias_wide[, c(2,4)])
phasic_bias_wide$SOUND <- rowMeans(phasic_bias_wide[, c(3,5)])
# first plot EWS by tone
# melt
phasic_bias <- phasic_bias_wide[, c(1,6,7)]
phasic_bias <- melt(phasic_bias, value.name = 'EWB', variable.name = 'tone')
# recode tone
phasic_bias$tone <- ifelse(phasic_bias$tone == 'BLANK', 1, 2)
phasic_bias$xj1 <- jitter(phasic_bias$tone, .2)
# summary data
sum_phasic_bias <- summarySEwithin(data = phasic_bias, measurevar = 'EWB', withinvars = 'tone')
# plot the same plot for EWB
ggplot(phasic_bias, aes(group = ID, colour = as.factor(tone), fill = as.factor(tone))) +
# all data
geom_half_violin(aes(as.factor(tone), EWB, group = tone),
position = position_nudge(x = -.05), side = "l",
alpha = .4) +
geom_point(aes(xj1, EWB), position = position_nudge(.05), shape = 21, alpha = .7) +
# summar data
geom_point(data = sum_phasic_bias, aes(tone, EWB),
position = position_nudge(-.05), colour = 'grey5', size = 2.5) +
geom_errorbar(data = sum_phasic_bias,
aes(tone, y = EWB,  ymin = EWB-ci, ymax = EWB+ci),
position = position_nudge(-.05), size = 0.8,
colour = 'grey5', width = .03) +
# connect the two lines
geom_line(data = sum_phasic_bias,
aes(x = tone, y = EWB),
size = 0.75, position = position_nudge(-.05), colour = 'grey5') +
scale_colour_manual(values = c('grey50', 'grey20')) +
scale_fill_manual(values = c('grey90', 'grey60')) +
scale_x_discrete(breaks = c(1,2), labels = c('Silent', 'Tone')) +
labs(x = '', y = 'EWB') +
ylim(-.15,.10) +
theme_classic() +
theme(legend.position = 'none',
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) -> phasic_bias_plot
# is this difference at all significant??
# difference between early and late
phasic_bias_wide$DIFF <- phasic_bias_wide$SOUND - phasic_bias_wide$BLANK
# get effect size
phasic_bias_diff <- summarySE(data = phasic_bias_wide, measurevar = 'DIFF', na.rm = TRUE)
phasic_bias_diff <- phasic_bias_diff %>% mutate(es = DIFF/sd)
phasic_bias_diff
tone_bias_test <- t.test(phasic_bias_wide$DIFF, mu = 0, alternative = 'two.sided')
tone_bias_test
# now plot difference and put together!
ggplot(phasic_bias_diff) +
geom_hline(aes(yintercept = 0), colour = 'gray50',
size = 1, linetype = 'dashed') +
geom_point(aes(0, DIFF), size = 3.5, colour = 'grey5') +
geom_linerange(aes(0, ymin = DIFF-ci, ymax = DIFF+ci), colour = 'grey5', size = 1) +
#xlim(-.025,.025) +
ylim(-.03,.03) +
labs(x = '', y = 'Difference (tone - silent)') +
scale_x_continuous(breaks = 0, labels = '') +
theme_classic() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12))-> phasicB_diff_plot
phasic_bias_all <- ggarrange(phasic_bias_plot, phasicB_diff_plot,
ncol = 2, nrow = 1,
widths = c(1, 0.5))
phasic_bias_all
EWSplot <- ggarrange(tonic_all, phasic_all,
ncol = 1, nrow = 2,
labels = c('a.','b.'))
EWBplot <- ggarrange(tonic_bias_all, phasic_bias_all,
ncol = 1, nrow = 2,
labels = c('a.','b.'))
ggsave('EWS_fig4.png', EWSplot, device = NULL, path = aPath,
width = 6, height = 8, dpi = 600)
ggsave('EWS_fig5.png', EWBplot, device = NULL, path = aPath,
width = 6, height = 8, dpi = 600)
all_cond_wide <- phasic_wide[, c(1:5) ,]
# melt
all_cond <- melt(all_cond_wide, value.name = 'EWS')
# transform variable to numerical
all_cond <- all_cond %>%
rowwise() %>%
mutate(
COND = case_when(variable == 'EARLY_BLANK' ~ '1',
variable == 'EARLY_SOUND' ~ '2',
variable == 'LATE_BLANK' ~ '3',
variable == 'LATE_SOUND' ~ '4'
))
all_cond$BLOCK <- ifelse(all_cond$COND == '1' | all_cond$COND == '2', '1', '2')
all_cond$TONE <- ifelse(all_cond$COND == '1' | all_cond$COND == '3', '1', '2')
all_cond$BLOCK <- as.factor(all_cond$BLOCK)
all_cond$TONE <- as.factor(all_cond$TONE)
# summarise
sum_all <- summarySEwithin(all_cond, measurevar = 'EWS', withinvars = 'COND')
# identify blocks and tones
sum_all$BLOCK <- ifelse(sum_all$COND == '1' | sum_all$COND == '2', 'Early', 'Late')
sum_all$TONE <- ifelse(sum_all$COND == '1' | sum_all$COND == '3', 'Silent', 'Tone')
sum_all
# ANOVA of all effects
EWSanov <- ezANOVA(
data = all_cond
, dv = .(EWS)
, wid = .(ID)
, within = .(BLOCK, TONE)
, type = 3,
return_aov = TRUE,
detailed = TRUE
)
#print(EWSanov$ANOVA)
#EWSanov$ANOVA
#EWSanov$`Mauchly's Test for Sphericity`
#EWSanov$`Sphericity Corrections`
aovEWS <- aovEffectSize(EWSanov, effectSize = "pes")
aovDispTable(aovEWS)
# plot this bad boy
ggplot(sum_all, aes(BLOCK, EWS, group = TONE, colour = TONE)) +
geom_point(position = position_dodge(.2), size = 3) +
geom_errorbar(aes(BLOCK, ymin = EWS-ci, ymax = EWS+ci),
position = position_dodge(.2), width = .1, size = 0.75) +
geom_line(aes(x = BLOCK, y = EWS),
size = 1, position = position_dodge(.2)) +
scale_colour_manual(values = c('grey70', 'grey20')) +
ylim(0.98, 1.05) +
labs(x = '') +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = 'none',
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
title = element_text(size = 14),
legend.text = element_text(size = 12)) -> inter_plot
inter_plot
all_bias_wide <- phasic_bias_wide[, c(1:5) ,]
# melt
all_bias_wide <- melt(all_bias_wide, value.name = 'EWB')
# transform variable to numerical
all_bias_wide <- all_bias_wide %>%
rowwise() %>%
mutate(
COND = case_when(variable == 'EARLY_BLANK' ~ '1',
variable == 'EARLY_SOUND' ~ '2',
variable == 'LATE_BLANK' ~ '3',
variable == 'LATE_SOUND' ~ '4'
))
all_bias_wide$BLOCK <- ifelse(all_bias_wide$COND == '1' | all_bias_wide$COND == '2', '1', '2')
all_bias_wide$TONE <- ifelse(all_bias_wide$COND == '1' | all_bias_wide$COND == '3', '1', '2')
all_bias_wide$BLOCK <- as.factor(all_bias_wide$BLOCK)
all_bias_wide$TONE <- as.factor(all_bias_wide$TONE)
# summarise
sum_bias_all <- summarySEwithin(all_bias_wide, measurevar = 'EWB', withinvars = 'COND')
# identify blocks and tones
sum_bias_all$BLOCK <- ifelse(sum_bias_all$COND == '1' | sum_bias_all$COND == '2', 'Early', 'Late')
sum_bias_all$TONE <- ifelse(sum_bias_all$COND == '1' | sum_bias_all$COND == '3', 'Silent', 'Tone')
# ANOVA of all effects
EWBanov <- ezANOVA(
data = all_bias_wide
, dv = .(EWB)
, wid = .(ID)
, within = .(BLOCK, TONE)
, type = 3,
return_aov = TRUE,
detailed = TRUE
)
#print(EWSanov$ANOVA)
#EWBanov$ANOVA
#EWBanov$`Mauchly's Test for Sphericity`
#EWBanov$`Sphericity Corrections`
aovEWB <- aovEffectSize(EWBanov, effectSize = "pes")
aovDispTable(aovEWB)
# plot this bad boy
ggplot(sum_bias_all, aes(BLOCK, EWB, group = TONE, colour = TONE)) +
geom_point(position = position_dodge(.2), size = 3) +
geom_errorbar(aes(BLOCK, ymin = EWB-ci, ymax = EWB+ci),
position = position_dodge(.2), width = .1, size = 0.75) +
geom_line(aes(x = BLOCK, y = EWB),
size = 1, position = position_dodge(.2)) +
scale_colour_manual(values = c('grey70', 'grey20')) +
ylim(-.05, .01) +
labs(x = '') +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = 'none',
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
title = element_text(size = 14),
legend.text = element_text(size = 12)) -> inter_bias_plot
inter_bias_plot
# plot all RT, are they skewed?
ggplot(all_dat) +
geom_density(aes(response_time)) +
theme_bw()
# yes, should use median, but will record mean anyway
# average reaction time across trials
rt_dat <- aggregate(response_time~ID*block*pip, mean, data = all_dat)
# add median RT
med <- aggregate(response_time~ID*block*pip, median, data = all_dat)
# rename
med <- med %>%
dplyr::rename(RT_med = response_time)
# compile and rename
rt_dat <- rt_dat %>%
left_join(med, by = c('ID', 'block', 'pip')) %>%
dplyr::rename(BLOCK = block,
TONE = pip,
RT_mean = response_time) %>%
mutate(TONE = ifelse(TONE == 0, 'Silent', 'Tone'),
BLOCK = ifelse(BLOCK == 'EARLY', 'Early', 'Late'),
COND = case_when(BLOCK == 'Early' & TONE == 'Silent' ~ '1',
BLOCK == 'Early' & TONE == 'Tone' ~ '2',
BLOCK == 'Late' & TONE == 'Silent' ~ '3',
BLOCK == 'Late' & TONE == 'Tone' ~ '4'
))
head(rt_dat)
# summarise
sum_rt <- summarySEwithin(rt_dat, measurevar = 'RT_med', withinvars = 'COND')
# identify blocks and tones
sum_rt$BLOCK <- ifelse(sum_rt$COND == '1' | sum_rt$COND == '2', 'Early', 'Late')
sum_rt$TONE <- ifelse(sum_rt$COND == '1' | sum_rt$COND == '3', 'Silent', 'Tone')
sum_rt
# factors
rt_dat$ID <- as.factor(rt_dat$ID)
rt_dat$BLOCK <- as.factor(rt_dat$BLOCK)
rt_dat$TONE <- as.factor(rt_dat$TONE)
# ANOVA of RT
RTanov <- ezANOVA(
data = rt_dat
, dv = .(RT_med)
, wid = .(ID)
, within = .(BLOCK, TONE)
, type = 3,
return_aov = TRUE,
detailed = TRUE
)
#print(EWSanov$ANOVA)
#EWBanov$ANOVA
#EWBanov$`Mauchly's Test for Sphericity`
#EWBanov$`Sphericity Corrections`
aovRT <- aovEffectSize(RTanov, effectSize = "pes")
aovDispTable(aovRT)
# change RT to second for plotting purposes
sum_rts <- sum_rt %>%
mutate(RT_med = RT_med/1000,
sd = sd/1000,
ci = ci/1000,
se = se/1000)
ggplot(sum_rts, aes(BLOCK, RT_med, group = TONE, colour = TONE)) +
geom_point(position = position_dodge(.2), size = 3) +
geom_errorbar(aes(BLOCK, ymin = RT_med-ci, ymax = RT_med+ci),
position = position_dodge(.2), width = .1, size = 0.75) +
geom_line(aes(x = BLOCK, y = RT_med),
size = 1, position = position_dodge(.2)) +
scale_colour_manual(values = c('grey70', 'grey20')) +
ylim(1.4, 1.8) +
labs(x = '', y = 'Reaction time (sec)') +
theme_bw() +
theme(legend.title = element_blank(),
legend.position = 'right',
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
title = element_text(size = 14),
legend.text = element_text(size = 12)) -> inter_rt_plot
inter_rt_plot
explPlot1 <- ggarrange(inter_plot, inter_bias_plot,
ncol = 2, nrow = 1,
labels = c('a.','b.'))
explPlot2 <- ggarrange(NA, inter_rt_plot, NA,
ncol = 3, nrow = 1,
labels = c('', 'c.',''),
widths = c(.01,.70,.33),
hjust = .3)
explPlot <- ggarrange(explPlot1, explPlot2,
ncol = 1, nrow = 2)
explPlot
# save
ggsave('EWS_fig6.png', explPlot, device = NULL, path = aPath,
width = 6.5, height = 6, dpi = 600)
# save plot
ggsave('EWS_fig3.png', m_plot, device = NULL, path = aPath,
width = 10, height = 5.5, dpi = 600)
View(sum_all)
View(sum_phasic)
View(sum_tonic)
View(sum_tonic_bias)
View(sum_tonic)
allEWS_diff <- sum_tonic %>%
mutate(EWS(2) - EWS(1))
View(allEWS_diff)
allEWS_diff <- sum_tonic$EWS[2] - sum_tonic$EWS[1]
allEWS_diff
View(all_cond)
# first isolate all trials
all_tonic <- all_cond %>%
filter(cond < 3) %>%
pivot_wider(names_from = 'variable')
# first isolate all trials
all_tonic <- all_cond %>%
filter(cond < 3) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable')
View(all_tonic)
# first isolate all trials
all_tonic <- all_cond %>%
filter(cond < 3) %>%
pivot_wider(values_from = 'EWS', names_from = 'Block')
all_tonic <- all_cond %>%
filter(cond < 3)
View(all_tonic)
# first isolate all trials
all_tonic <- all_cond %>%
filter(cond == '1' && cond == '2') %>%
pivot_wider(values_from = 'EWS', names_from = 'Block')
# first isolate all trials
all_tonic <- all_cond %>%
filter(cond == '1' && cond == '2') %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK')
all_tonic <- all_cond %>%
filter(cond == '1' && cond == '2')
all_tonic <- all_cond %>%
filter(cond == '1' || cond == '2')
all_tonic <- all_cond %>%
filter(cond == '1' | cond == '2')
all_tonic <- all_cond %>%
filter(cond == '1')
all_tonic <- all_cond %>%
filter(COND == '1')
# first isolate all trials
all_tonic <- all_cond %>%
filter(COND == '1' & COND == '2') %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK')
all_tonic <- all_cond %>%
filter(COND == '1' & COND == '2')
all_tonic <- all_cond %>%
filter(COND == '1' && COND == '2')
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '2')
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '2') %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK')
# first isolate all trials
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '3') %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK')
# first isolate all trials
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '3') %>%
select(-c(COND, TONE)) %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK')
# first isolate all trials
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '3') %>%
select(-c(COND, TONE, variable)) %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK')
mutate(diff = late - early)
# first isolate all trials
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '3') %>%
select(-c(COND, TONE, variable)) %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK') %>%
dplyr::rename(early = 1,
late = 2) %>%
mutate(diff = late - early)
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '3') %>%
select(-c(COND, TONE, variable)) %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK') %>%
dplyr::rename(early = 1,
late = 2)
# first isolate all trials
all_tonic <- all_cond %>%
filter(COND == '1' | COND == '3') %>%
select(-c(COND, TONE, variable)) %>%
pivot_wider(values_from = 'EWS', names_from = 'BLOCK') %>%
dplyr::rename(early = 2,
late = 3) %>%
mutate(diff = late - early)
all_tonic <- all_cond %>%
pivot_wider(values_from = 'EWS', names_from = 'COND')
View(all_tonic)
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, variable)) %>%
pivot_wider(values_from = 'EWS', names_from = 'COND')
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable')
# first isolate all trials
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable') %>%
mutate(EARLY = mean(EARLY_BLANK, EARLY_SOUND),
LATE = mean(LATE_BLANK, LATE_SOUND))
# first isolate all trials
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable') %>%
mutate(EARLY = mean(EARLY_BLANK, EARLY_SOUND)) %>%
mutate(LATE = mean(LATE_BLANK, LATE_SOUND))
# first isolate all trials
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable')
mean(all_tonic$EARLY_BLANK, all_tonic$EARLY_SOUND)
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable') %>%
mutate(EARLY = (EARLY_BLANK + EARLY_SOUND)/2)
# first isolate all trials
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable') %>%
mutate(EARLY = (EARLY_BLANK + EARLY_SOUND)/2) %>%
mutate(LATE = (LATE_BLANK + LATE_SOUND)/2)
# first isolate all trials
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable') %>%
mutate(EARLY = (EARLY_BLANK + EARLY_SOUND)/2,
LATE = (LATE_BLANK + LATE_SOUND)/2) %>%
mutate(DIFF = LATE - EARLY)
mean_alldiff <- mean(all_tonic$DIFF)
mean_alldiff <- mean(all_tonic$DIFF)
sd_alldiff <- sd(all_tonic$DIFF)
d_alldiff <- mean_alldiff/sd_alldiff
mean_alldiff
sd_alldiff
d_alldiff
fprintf('Mean tonic diff, all trials: %d', mean_alldiff)
print('Mean tonic diff, all trials: %d', mean_alldiff)
print('Mean tonic diff, all trials')
print(paste0('Mean tonic diff, all trials: ', mean_alldiff))
print(paste0('Mean tonic diff, all trials: ', round(mean_alldiff, 2))
print(paste0('Mean tonic diff, all trials: ', round(mean_alldiff, 2)))
print(paste0('Mean tonic diff, all trials: ', round(mean_alldiff, 2)))
# first isolate all trials
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable') %>%
mutate(EARLY = (EARLY_BLANK + EARLY_SOUND)/2,
LATE = (LATE_BLANK + LATE_SOUND)/2) %>%
mutate(DIFF = LATE - EARLY)
mean_alldiff <- mean(all_tonic$DIFF)
sd_alldiff <- sd(all_tonic$DIFF)
d_alldiff <- mean_alldiff/sd_alldiff
print(paste0('Mean tonic diff, all trials: ', round(mean_alldiff, 2)))
print(paste0('SD tonic diff, all trials: ', round(sd_alldiff, 2)))
print(paste0('Cohens d tonic diff, all trials: ', round(d_alldiff, 2)))
# first isolate all trials
all_tonic <- all_cond %>%
select(-c(BLOCK, TONE, COND)) %>%
pivot_wider(values_from = 'EWS', names_from = 'variable') %>%
mutate(EARLY = (EARLY_BLANK + EARLY_SOUND)/2,
LATE = (LATE_BLANK + LATE_SOUND)/2) %>%
mutate(DIFF = LATE - EARLY)
mean_alldiff <- mean(all_tonic$DIFF)
sd_alldiff <- sd(all_tonic$DIFF)
d_alldiff <- mean_alldiff/sd_alldiff
print('Tonic diff all trials:')
print(paste0('Mean: ', round(mean_alldiff, 2)))
print(paste0('SD: ', round(sd_alldiff, 2)))
print(paste0('Cohens d: ', round(d_alldiff, 2)))
